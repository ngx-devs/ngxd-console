{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "project": ["tsconfig.json"],
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    "@typescript-eslint/semi": "warn",
    "curly": "off",
    "eqeqeq": "warn",
    "no-throw-literal": "warn",
    "semi": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variableLike",
        "format": ["camelCase", "UPPER_CASE", "snake_case"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "types": ["function"],
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "property",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean", "string", "string", "number", "array"],
        "modifiers": ["exported"],
        "format": ["UPPER_CASE"]
      },
      {
        "selector": ["enumMember"],
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "enum",
        "format": ["camelCase"],
        "custom": {
          "regex": "^e[A-Z]",
          "match": true
        }
      }
    ]
  },
  "ignorePatterns": ["out", "dist", "**/*.d.ts"]
}
